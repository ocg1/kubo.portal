package mx.com.kubo.managedbeans;

import java.io.Serializable;
import java.util.List;

import javax.annotation.PostConstruct;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.ManagedProperty;
import javax.faces.bean.RequestScoped;
import javax.faces.context.FacesContext;
import javax.servlet.http.HttpServletRequest;

import mx.com.kubo.model.Change_control;
import mx.com.kubo.model.Change_controlPK;
import mx.com.kubo.model.Membership;
import mx.com.kubo.services.Change_controlService;
import mx.com.kubo.services.MembershipService;

@ManagedBean
@RequestScoped
public class ConfirmationMail implements Serializable {
	private static final long serialVersionUID = 1L;
	@ManagedProperty("#{membershipServiceImp}")
	private MembershipService membershipService;
	@ManagedProperty("#{change_controlServiceImp}")
	private Change_controlService changeControlService;
	
	private Membership membership;
	private boolean success;
	
	@PostConstruct
	public void init() {

		FacesContext facesContext = FacesContext.getCurrentInstance();
		String activation = (String) facesContext.getExternalContext().getRequestParameterMap().get("counter");
		String newemail = (String) facesContext.getExternalContext().getRequestParameterMap().get("email");
		if(activation!=null && newemail!=null ){
			membership=membershipService.getMemberShipByActivCode(activation);
			if(membership!=null && !membership.getEmail().equals(newemail)){
				List<Change_control> lisChangMail=changeControlService.getListByProspectByAfectedTablesFields(membership.getMembershipPK().getProspectus_id(), membership.getMembershipPK().getCompany_id(),new String[]{"ln_membership"},new String[]{"email"});
				if(lisChangMail!=null && !lisChangMail.isEmpty()){
					Change_control changeMail=lisChangMail.get(lisChangMail.size()-1);
					if(changeMail.getNew_value().equals(newemail) && changeMail.getComments().endsWith("Solicito cambio de correo")){							
							HttpServletRequest httpServletRequest = (HttpServletRequest) FacesContext.getCurrentInstance().getExternalContext().getRequest(); 
							  String ipAddress  = httpServletRequest.getHeader("X-FORWARDED-FOR");  
						        if(ipAddress == null)  
						        {  
						          ipAddress = httpServletRequest.getRemoteAddr();  
						        }
							Change_controlPK changeCtrlPK=new Change_controlPK();
							changeCtrlPK.setProspectus_id(membership.getMembershipPK().getProspectus_id());
							changeCtrlPK.setCompany_id(membership.getMembershipPK().getCompany_id());
							
							Change_control changeCtrl=new Change_control();
							changeCtrl.setChange_controlPK(changeCtrlPK);
							changeCtrl.setChange_prospectus_id(changeMail.getChange_controlPK().getProspectus_id());
							changeCtrl.setAfected_table("ln_membership");
							changeCtrl.setIp(ipAddress);			
							changeCtrl.setOriginal_value(membership.getEmail());
							changeCtrl.setNew_value(newemail);
							changeCtrl.setField("email");
							changeCtrl.setComments("Confirmo cambio de correo");
							
							membership.setEmail(newemail);
							membershipService.update(membership);
							
							if(changeControlService.addChangeControl(changeCtrl,membership.getMembershipPK().getProspectus_id(),membership.getMembershipPK().getCompany_id())){
								success=true;
							}
							
					}else{
						success=false;
					}
				}else{
					success=false;
				}
			}else{
				success=false;
			}
								
		}
	}

	public MembershipService getMembershipService() {
		return membershipService;
	}

	public void setMembershipService(MembershipService membershipService) {
		this.membershipService = membershipService;
	}

	public Change_controlService getChangeControlService() {
		return changeControlService;
	}

	public void setChangeControlService(Change_controlService changeControlService) {
		this.changeControlService = changeControlService;
	}

	public Membership getMembership() {
		return membership;
	}

	public void setMembership(Membership membership) {
		this.membership = membership;
	}

	public boolean isSuccess() {
		return success;
	}

	public void setSuccess(boolean success) {
		this.success = success;
	}
	
	

}
